Key Features
An Object-Relational DBMS (ORDBMS) extends the traditional relational model by incorporating object-oriented features. It aims to combine the robustness of relational databases with the flexibility of object-oriented programming.

Key Enhancements:

Complex Data Types:

Support for user-defined types, arrays, and other complex structures beyond scalar types.
Inheritance:

Tables can inherit properties from other tables, allowing for hierarchical data modeling.
Encapsulation:

Encapsulate data and methods within the database, enabling stored procedures and functions that operate on complex types.
Polymorphism:

Ability to handle different types through a common interface, often through inheritance hierarchies.
Enhanced Query Capabilities:

Support for querying based on object-oriented constructs.
Advantages and Disadvantages
Advantages:

Improved Flexibility: Better alignment with object-oriented application code, reducing impedance mismatch.
Reusability: Inheritance and user-defined types promote code and schema reuse.
Rich Data Modeling: Ability to represent complex relationships and data structures.
Disadvantages:

Increased Complexity: More sophisticated database designs can be harder to manage and understand.
Performance Overheads: Advanced features may introduce performance penalties.
Limited Standardization: Fewer standardized features compared to pure relational models, leading to vendor-specific implementations.