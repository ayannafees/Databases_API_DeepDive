Introduction to Replication and High Availability
Replication
Replication is the process of copying data from one database server (primary) to one or more others (secondaries). This ensures that multiple copies of data exist across different servers, providing redundancy and enhancing data availability.

High Availability (HA)
High Availability refers to systems designed to operate continuously without failure for extended periods. In the context of databases, HA ensures that the database remains accessible and operational even if some components fail.

Key Objectives:

Fault Tolerance: System continues to operate despite failures.
Data Redundancy: Multiple copies of data exist to prevent loss.
Automatic Failover: Seamless transition to backup systems without manual intervention.
Understanding MongoDB Replica Sets
A Replica Set in MongoDB is a group of mongod instances that maintain the same data set. Replica sets provide redundancy and high availability, and are the basis for all production deployments.

Components of a Replica Set:
Primary Node:

Handles all write operations.
Replicates data to secondary nodes.
There is only one primary node at any given time.
Secondary Nodes:

Replicate data from the primary node.
Can handle read operations (if configured).
Automatically elected as primary if the current primary fails.
Arbiter Node:

Participates in elections but does not hold data.
Helps in determining the primary during failover.
How Replica Sets Ensure HA:
Data Redundancy: Multiple copies of data exist across different nodes.
Automatic Failover: If the primary node fails, an election is held to select a new primary.
Read Scalability: Secondary nodes can be configured to handle read operations, distributing the load.